<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="yxinfo.yjh.dao.mapper.ApproveCoreMapper">
  <resultMap id="BaseResultMap" type="yxinfo.yjh.dao.model.ApproveCore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="approve_member_id" jdbcType="INTEGER" property="approveMemberId" />
    <result column="real_approve_member_id" jdbcType="INTEGER" property="realApproveMemberId" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="approve_at" jdbcType="TIMESTAMP" property="approveAt" />
    <result column="fstatus" jdbcType="TINYINT" property="fstatus" />
    <result column="ftype" jdbcType="TINYINT" property="ftype" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="opinion" jdbcType="VARCHAR" property="opinion" />
    <result column="rel_id" jdbcType="INTEGER" property="relId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, title, member_name, member_id, approve_member_id, real_approve_member_id, create_at, 
    approve_at, fstatus, ftype, summary, opinion, rel_id
  </sql>
  <select id="selectByExample" parameterType="yxinfo.yjh.dao.model.ApproveCoreExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from approve_core
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from approve_core
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from approve_core
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="yxinfo.yjh.dao.model.ApproveCoreExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from approve_core
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="yxinfo.yjh.dao.model.ApproveCore" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into approve_core (id, title, member_name, 
      member_id, approve_member_id, real_approve_member_id, 
      create_at, approve_at, fstatus, 
      ftype, summary, opinion, 
      rel_id)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, 
      #{memberId,jdbcType=INTEGER}, #{approveMemberId,jdbcType=INTEGER}, #{realApproveMemberId,jdbcType=INTEGER}, 
      #{createAt,jdbcType=TIMESTAMP}, #{approveAt,jdbcType=TIMESTAMP}, #{fstatus,jdbcType=TINYINT}, 
      #{ftype,jdbcType=TINYINT}, #{summary,jdbcType=VARCHAR}, #{opinion,jdbcType=VARCHAR}, 
      #{relId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="yxinfo.yjh.dao.model.ApproveCore" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into approve_core
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="approveMemberId != null">
        approve_member_id,
      </if>
      <if test="realApproveMemberId != null">
        real_approve_member_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="approveAt != null">
        approve_at,
      </if>
      <if test="fstatus != null">
        fstatus,
      </if>
      <if test="ftype != null">
        ftype,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="opinion != null">
        opinion,
      </if>
      <if test="relId != null">
        rel_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="approveMemberId != null">
        #{approveMemberId,jdbcType=INTEGER},
      </if>
      <if test="realApproveMemberId != null">
        #{realApproveMemberId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="approveAt != null">
        #{approveAt,jdbcType=TIMESTAMP},
      </if>
      <if test="fstatus != null">
        #{fstatus,jdbcType=TINYINT},
      </if>
      <if test="ftype != null">
        #{ftype,jdbcType=TINYINT},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="opinion != null">
        #{opinion,jdbcType=VARCHAR},
      </if>
      <if test="relId != null">
        #{relId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="yxinfo.yjh.dao.model.ApproveCoreExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from approve_core
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approve_core
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.approveMemberId != null">
        approve_member_id = #{record.approveMemberId,jdbcType=INTEGER},
      </if>
      <if test="record.realApproveMemberId != null">
        real_approve_member_id = #{record.realApproveMemberId,jdbcType=INTEGER},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approveAt != null">
        approve_at = #{record.approveAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fstatus != null">
        fstatus = #{record.fstatus,jdbcType=TINYINT},
      </if>
      <if test="record.ftype != null">
        ftype = #{record.ftype,jdbcType=TINYINT},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.opinion != null">
        opinion = #{record.opinion,jdbcType=VARCHAR},
      </if>
      <if test="record.relId != null">
        rel_id = #{record.relId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approve_core
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER},
      approve_member_id = #{record.approveMemberId,jdbcType=INTEGER},
      real_approve_member_id = #{record.realApproveMemberId,jdbcType=INTEGER},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      approve_at = #{record.approveAt,jdbcType=TIMESTAMP},
      fstatus = #{record.fstatus,jdbcType=TINYINT},
      ftype = #{record.ftype,jdbcType=TINYINT},
      summary = #{record.summary,jdbcType=VARCHAR},
      opinion = #{record.opinion,jdbcType=VARCHAR},
      rel_id = #{record.relId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="yxinfo.yjh.dao.model.ApproveCore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approve_core
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="approveMemberId != null">
        approve_member_id = #{approveMemberId,jdbcType=INTEGER},
      </if>
      <if test="realApproveMemberId != null">
        real_approve_member_id = #{realApproveMemberId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="approveAt != null">
        approve_at = #{approveAt,jdbcType=TIMESTAMP},
      </if>
      <if test="fstatus != null">
        fstatus = #{fstatus,jdbcType=TINYINT},
      </if>
      <if test="ftype != null">
        ftype = #{ftype,jdbcType=TINYINT},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="opinion != null">
        opinion = #{opinion,jdbcType=VARCHAR},
      </if>
      <if test="relId != null">
        rel_id = #{relId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="yxinfo.yjh.dao.model.ApproveCore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update approve_core
    set title = #{title,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      approve_member_id = #{approveMemberId,jdbcType=INTEGER},
      real_approve_member_id = #{realApproveMemberId,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      approve_at = #{approveAt,jdbcType=TIMESTAMP},
      fstatus = #{fstatus,jdbcType=TINYINT},
      ftype = #{ftype,jdbcType=TINYINT},
      summary = #{summary,jdbcType=VARCHAR},
      opinion = #{opinion,jdbcType=VARCHAR},
      rel_id = #{relId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>